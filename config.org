* General Settings
** Personal
#+begin_src emacs-lisp
  (setq user-full-name "Brandon Shega"
	user-mail-address "b.shega@gmail.com"
	epa-file-encrypt-to user-mail-address)
#+end_src

** Settings
#+begin_src emacs-lisp
  (blink-cursor-mode 0)
  (scroll-bar-mode 0)
  (tool-bar-mode 0)
  (tooltip-mode 0)
  (setq inhibit-startup-screen t)
  (cd "~/")
#+end_src

* Package Management
** Straight.el
#+begin_src emacs-lisp
  (defvar bootstrap-version)
  (let ((bootstrap-file
	 (expand-file-name "straight/repos/straight.el/bootstrap.el" user-emacs-directory))
	(bootstrap-version 5))
    (unless (file-exists-p bootstrap-file)
      (with-current-buffer
	  (url-retrieve-synchronously
	   "https://raw.githubusercontent.com/raxod502/straight.el/develop/install.el"
	   'silent 'inhibit-cookies)
	(goto-char (point-max))
	(eval-print-last-sexp)))
    (load bootstrap-file nil 'nomessage))
#+end_src

** Use Package
#+begin_src emacs-lisp
  (setq straight-use-package-by-default t)
  (straight-use-package 'use-package)
#+end_src

* Theme
Load the current theme of the day
#+begin_src emacs-lisp
  (use-package doom-themes
    :config
    (load-theme 'doom-dracula t))

  (use-package seoul256-theme
    :disabled
    :config
    (load-theme 'seoul256 t))
#+end_src
* Packages
** General
*** Evil Leader
#+begin_src emacs-lisp
  (use-package evil-leader
    :config
    (global-evil-leader-mode)
    (evil-leader/set-leader "<SPC>"))
#+end_src

*** Evil
#+begin_quote
Evil is an extensible vi layer for Emacs. It emulates the main features of Vim, and provides facilities for writing custom extensions.
#+end_quote
#+begin_src emacs-lisp
  (use-package evil
    :after evil-leader
    :config
    (evil-mode 1))
#+end_src

*** Projectile
#+begin_src emacs-lisp
  (use-package projectile
    :config
    (projectile-mode +1))
#+end_src
    
*** Ivy
#+begin_src emacs-lisp
  (use-package ivy
    :config
    (ivy-mode t))
#+end_src

*** Which Key
#+begin_quote
Emacs package that displays available keybindings in popup
#+end_quote
#+begin_src emacs-lisp
  (use-package which-key
    :config
    (which-key-mode))
#+end_src
*** General
#+begin_src emacs-lisp
  (use-package general)
#+end_src
* Keybindings
#+begin_src emacs-lisp
  ;; <leader> b --- buffers
  (general-define-key
   :keymaps '(normal)
   :prefix "SPC"
   "b" '(:ignore t :which-key "buffers")
   "b b" 'switch-to-buffer)
  ;; <leader> f --- files
  (general-define-key
   :keymaps '(normal)
   :prefix "SPC"
   "f" '(:ignore t :which-key "files")
   "f f" 'find-file)

  ;; <leader> p --- projects
  (general-define-key
   :keymaps '(normal)
   :prefix "SPC"
   "p" '(:ignore t :which-key "projects")
   "p p" 'projectile-switch-project)
#+end_src
